// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$animation-name: 'animation';
$animation-x: 165px;
$animation-y: 129px;
$animation-offset-x: -165px;
$animation-offset-y: -129px;
$animation-width: 40px;
$animation-height: 40px;
$animation-total-width: 257px;
$animation-total-height: 216px;
$animation-image: '../../../imgs/about/icons/icons.png';
$animation: (165px, 129px, -165px, -129px, 40px, 40px, 257px, 216px, '../../../imgs/about/icons/icons.png', 'animation', );
$css3-name: 'css3';
$css3-x: 41px;
$css3-y: 129px;
$css3-offset-x: -41px;
$css3-offset-y: -129px;
$css3-width: 40px;
$css3-height: 46px;
$css3-total-width: 257px;
$css3-total-height: 216px;
$css3-image: '../../../imgs/about/icons/icons.png';
$css3: (41px, 129px, -41px, -129px, 40px, 46px, 257px, 216px, '../../../imgs/about/icons/icons.png', 'css3', );
$diagram-name: 'diagram';
$diagram-x: 123px;
$diagram-y: 129px;
$diagram-offset-x: -123px;
$diagram-offset-y: -129px;
$diagram-width: 41px;
$diagram-height: 41px;
$diagram-total-width: 257px;
$diagram-total-height: 216px;
$diagram-image: '../../../imgs/about/icons/icons.png';
$diagram: (123px, 129px, -123px, -129px, 41px, 41px, 257px, 216px, '../../../imgs/about/icons/icons.png', 'diagram', );
$html5-name: 'html5';
$html5-x: 0px;
$html5-y: 129px;
$html5-offset-x: 0px;
$html5-offset-y: -129px;
$html5-width: 40px;
$html5-height: 46px;
$html5-total-width: 257px;
$html5-total-height: 216px;
$html5-image: '../../../imgs/about/icons/icons.png';
$html5: (0px, 129px, 0px, -129px, 40px, 46px, 257px, 216px, '../../../imgs/about/icons/icons.png', 'html5', );
$jquery-name: 'jquery';
$jquery-x: 41px;
$jquery-y: 176px;
$jquery-offset-x: -41px;
$jquery-offset-y: -176px;
$jquery-width: 40px;
$jquery-height: 38px;
$jquery-total-width: 257px;
$jquery-total-height: 216px;
$jquery-image: '../../../imgs/about/icons/icons.png';
$jquery: (41px, 176px, -41px, -176px, 40px, 38px, 257px, 216px, '../../../imgs/about/icons/icons.png', 'jquery', );
$jsicon-name: 'jsicon';
$jsicon-x: 206px;
$jsicon-y: 129px;
$jsicon-offset-x: -206px;
$jsicon-offset-y: -129px;
$jsicon-width: 40px;
$jsicon-height: 40px;
$jsicon-total-width: 257px;
$jsicon-total-height: 216px;
$jsicon-image: '../../../imgs/about/icons/icons.png';
$jsicon: (206px, 129px, -206px, -129px, 40px, 40px, 257px, 216px, '../../../imgs/about/icons/icons.png', 'jsicon', );
$laptop-name: 'laptop';
$laptop-x: 123px;
$laptop-y: 176px;
$laptop-offset-x: -123px;
$laptop-offset-y: -176px;
$laptop-width: 40px;
$laptop-height: 29px;
$laptop-total-width: 257px;
$laptop-total-height: 216px;
$laptop-image: '../../../imgs/about/icons/icons.png';
$laptop: (123px, 176px, -123px, -176px, 40px, 29px, 257px, 216px, '../../../imgs/about/icons/icons.png', 'laptop', );
$nodejs-name: 'nodejs';
$nodejs-x: 82px;
$nodejs-y: 129px;
$nodejs-offset-x: -82px;
$nodejs-offset-y: -129px;
$nodejs-width: 40px;
$nodejs-height: 45px;
$nodejs-total-width: 257px;
$nodejs-total-height: 216px;
$nodejs-image: '../../../imgs/about/icons/icons.png';
$nodejs: (82px, 129px, -82px, -129px, 40px, 45px, 257px, 216px, '../../../imgs/about/icons/icons.png', 'nodejs', );
$performance-name: 'performance';
$performance-x: 82px;
$performance-y: 176px;
$performance-offset-x: -82px;
$performance-offset-y: -176px;
$performance-width: 40px;
$performance-height: 30px;
$performance-total-width: 257px;
$performance-total-height: 216px;
$performance-image: '../../../imgs/about/icons/icons.png';
$performance: (82px, 176px, -82px, -176px, 40px, 30px, 257px, 216px, '../../../imgs/about/icons/icons.png', 'performance', );
$ps-name: 'ps';
$ps-x: 0px;
$ps-y: 176px;
$ps-offset-x: 0px;
$ps-offset-y: -176px;
$ps-width: 40px;
$ps-height: 40px;
$ps-total-width: 257px;
$ps-total-height: 216px;
$ps-image: '../../../imgs/about/icons/icons.png';
$ps: (0px, 176px, 0px, -176px, 40px, 40px, 257px, 216px, '../../../imgs/about/icons/icons.png', 'ps', );
$screen-name: 'screen';
$screen-x: 0px;
$screen-y: 0px;
$screen-offset-x: 0px;
$screen-offset-y: 0px;
$screen-width: 128px;
$screen-height: 128px;
$screen-total-width: 257px;
$screen-total-height: 216px;
$screen-image: '../../../imgs/about/icons/icons.png';
$screen: (0px, 0px, 0px, 0px, 128px, 128px, 257px, 216px, '../../../imgs/about/icons/icons.png', 'screen', );
$tablet-name: 'tablet';
$tablet-x: 129px;
$tablet-y: 0px;
$tablet-offset-x: -129px;
$tablet-offset-y: 0px;
$tablet-width: 128px;
$tablet-height: 128px;
$tablet-total-width: 257px;
$tablet-total-height: 216px;
$tablet-image: '../../../imgs/about/icons/icons.png';
$tablet: (129px, 0px, -129px, 0px, 128px, 128px, 257px, 216px, '../../../imgs/about/icons/icons.png', 'tablet', );
$spritesheet-width: 257px;
$spritesheet-height: 216px;
$spritesheet-image: '../../../imgs/about/icons/icons.png';
$spritesheet-sprites: ($animation, $css3, $diagram, $html5, $jquery, $jsicon, $laptop, $nodejs, $performance, $ps, $screen, $tablet, );
$spritesheet: (257px, 216px, '../../../imgs/about/icons/icons.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
